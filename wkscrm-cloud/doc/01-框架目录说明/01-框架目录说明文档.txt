20210720:
若依框架是一个开源的企业级分布式框架，官网地址:http://doc.ruoyi.vip/ruoyi-cloud/
本框架以若依分布式框架为基础版本，在基础版本之上做了调整，使得框架划分思想更加明确，调整思想如下:

一级目录：
    1、wkscrm-cloud:为框架名称，其下分为3层module:
二级目录：
    1、wkscrm-common:为基础组件封装模块，其下具体的组件服务以common-打头命名，各基础组件不做具体部署,只作为server和service的依赖使用，其他服务需要使用时，在wkscrm-cloud层的pom.xml中将common的依赖及版本号引入，再在具体的微服务中引入对应的依赖(引用规范在框架中有示例，请按照规范引用)
    2、wkscrm-server:为微服务基础设施服务，其下具体的设施服务以server-打头命名，需要做具体部署，打包形式jar包，包括认证中心、网关、监控、注册中心、配置中心、限流
    3、wkscrm-service:为业务微服务，与系统业务相关，其下具体的业务服务以service-打头，需要做具体部署，打包形式jar包。
                注：如需增加新的微服务或组件，请按照上述规范进行增加。
    4、wkscrm-ui:前端项目，需部署在nginx下，nginx部署请采用动静分离的形式，静态资源从nginx直接获取，动态资源需要经过nginx转发至网关，不要将动态请求从前端直接请求至网关。
    5、bin:开发人员将项目部署在本地时，使用bin下的脚本可启动对应的服务，可不使用，一般在idea中直接启动服务即可。
    6、doc:框架及项目的相关说明文档。
    7、docker:包含了基础设施服务、业务微服务、mysql/nacos/nginx/redis的docker环境下的部署脚本。后续需增加：sentinel、rabbitMQ、部分业务微服务的部署脚本，参考已有脚本即可。
           deploy.sh和docker-compose.yml是容器统一编排脚本。本项目容器规模不是很大，容器编排无需使用k8s，使用docker-compose编排即可。
    8、logs:各微服务的日志文件，目前只配置输出了info和error级别的日志，目录按照微服务名称划分。若新增服务，日志的输出请按照此规范输出，配置参考各服务下logbak.yml文件即可。
         logback目前尚未配置elk,若需通过elk收集服务日志，还需在logback.yml文件中集成logstash,通过logstash管道将服务日志传输至elasticsearch.
         为了方便运维日志追踪，框架新增集成了tlog日志框架进行日志增强。好处是可以为一次外部（一次外部请求可能经过多个微服务）请求生成唯一id,运维时可通过唯一id追踪多个微服务的日志。
    9、sql: 各微服务的数据库脚本。wk_开头代表mysql库，clickhouse_开头代表大数据存储，遵循分库分表的思想，各业务服务对应各自的库。尤其是mysql,不要将所有的表集中在同一个库下。
三级目录：
    各组件、服务的详细说明请见：项目结构描述.jpg

---------------若依官网说明文档很齐全，也有很多开源的集成好的组件供选择，项目实施技术层面的任何疑问可去若依官网找资料。------------------------------------------------------------------------------------------------------




